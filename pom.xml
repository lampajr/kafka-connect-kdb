<!--

    Copyright Â© 2021 Andrea Lamparelli (a.lamparelli95@gmail.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.lampajr.kafka.connect</groupId>
    <artifactId>kafka-connect-kdb</artifactId>
    <version>0.0.3-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>kafka-connect-kdb</name>

    <description>A Kafka Connect plugin for interacting with KDB.</description>
    <url>https://github.com/lampajr/kafka-connect-kdb</url>
    <inceptionYear>2021</inceptionYear>

    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Andrea Lamparelli</name>
            <email>a.lamparelli95@gmail.com</email>
            <url>https://github.com/lampajr</url>
            <roles>
                <role>maintainer</role>
            </roles>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:https://github.com/lampajr/kafka-connect-kdb.git</connection>
        <developerConnection>scm:git:git@github.com:lampajr/kafka-connect-kdb.git</developerConnection>
        <url>https://github.com/lampajr/kafka-connect-kdb</url>
    </scm>
    <issueManagement>
        <system>github</system>
        <url>https://github.com/lampajr/kafka-connect-kdb/issues</url>
    </issueManagement>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <kafka.version>2.8.0</kafka.version>
        <junit.version>4.12</junit.version>
        <mockito.version>3.9.0</mockito.version>
        <confluent.hub.packaging.version>0.12.0</confluent.hub.packaging.version>
        <docker-compose-rule.version>1.7.0</docker-compose-rule.version>
        <commons-configuration.version>1.6</commons-configuration.version>

        <maven.checkstyle.version>3.1.2</maven.checkstyle.version>
        <com-puppycrawl-tools.version>8.45</com-puppycrawl-tools.version>
        <junit.surefire.plugin.version>1.3.2</junit.surefire.plugin.version>
        <surefire.version>2.22.2</surefire.version>
        <failsafe.version>2.22.2</failsafe.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>connect-api</artifactId>
            <version>${kafka.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Allows to read various configuration properties.
             https://commons.apache.org/proper/commons-configuration/userguide/quick_start.html -->
        <dependency>
            <groupId>commons-configuration</groupId>
            <artifactId>commons-configuration</artifactId>
            <version>${commons-configuration.version}</version>
        </dependency>

        <!-- test -->
        <!-- For executing JUnit tests that interact with Docker Compose managed containers.
             https://github.com/palantir/docker-compose-rule -->
        <dependency>
            <groupId>com.palantir.docker.compose</groupId>
            <artifactId>docker-compose-rule-junit4</artifactId>
            <version>${docker-compose-rule.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/junit/junit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>


        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.1.8</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <!-- Packages a project into an archive file for use on Confluent Hub.
                     https://docs.confluent.io/5.5.1/connect/managing/confluent-hub/kafka-connect-maven-plugin/plugin-info.html-->
                <plugin>
                    <groupId>io.confluent</groupId>
                    <artifactId>kafka-connect-maven-plugin</artifactId>
                    <version>${confluent.hub.packaging.version}</version>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <id>hub</id>
                            <goals>
                                <goal>kafka-connect</goal>
                            </goals>
                            <configuration>
                                <skip>true</skip> <!-- temporary disabled -->
                                <ownerName>Andrea Lamparelli</ownerName>
                                <ownerUsername>lampajr</ownerUsername>
                                <confluentControlCenterIntegration>true</confluentControlCenterIntegration>
                                <dockerNamespace>lampajr</dockerNamespace>
                                <dockerName>kafka-connect-docker</dockerName>
                                <supportUrl>${project.issueManagement.url}</supportUrl>
                                <supportSummary>Support provided through community involvement.</supportSummary>
                                <excludes>
                                    <exclude>com.google.guava:guava</exclude>
                                    <exclude>com.fasterxml.jackson.core:jackson-databind</exclude>
                                </excludes>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Provides goals to control certain environmental constraints such
                 as Maven version, JDK version and OS family.
                 https://maven.apache.org/enforcer/maven-enforcer-plugin/-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.4.1</version>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.5.0</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>1.8</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Used to compile the sources of your project.
                 https://maven.apache.org/plugins/maven-compiler-plugin/ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <inherited>true</inherited>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <!-- Provides the capability to build jars.
                 https://maven.apache.org/plugins/maven-jar-plugin/ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.12</version>
                <executions>
                    <execution>
                        <id>add-integration-test-source</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.basedir}/src/it/java</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-test-resource</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src/it/resources</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <!-- Uses the Javadoc tool to generate javadocs for the specified project.
                 https://maven.apache.org/plugins/maven-javadoc-plugin/ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9.1</version>
                <configuration>
                    <detectJavaApiLink>false</detectJavaApiLink>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Enables developers to combine project output into a single distributable archive that also contains
                 dependencies, modules, site documentation, and other files.
                 http://maven.apache.org/plugins/maven-assembly-plugin/ -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <skipAssembly>true</skipAssembly> <!-- Temporary disabled -->
                            <attach>false</attach>
                            <appendAssemblyId>false</appendAssemblyId>
                            <descriptors>
                                <descriptor>src/main/assembly/package.xml</descriptor>
                            </descriptors>
                            <formats>
                                <format>tar.gz</format>
                            </formats>
                            <tarLongFileMode>posix</tarLongFileMode>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Used during the test phase of the build lifecycle to execute the unit tests of an application.
                 https://maven.apache.org/surefire/maven-surefire-plugin/ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.version}</version>
                <configuration>
                    <excludes>
                        <exclude>**/*IT.java</exclude>
                        <exclude>**/*IntegrationTest.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- Designed to run integration tests.
                 https://maven.apache.org/surefire/maven-failsafe-plugin/ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${failsafe.version}</version>
                <configuration>
                    <includes>
                        <include>**/*IT</include>
                        <include>**/*IntegrationTest</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Generates a report regarding the code style used by the developers.
                 http://maven.apache.org/plugins/maven-checkstyle-plugin/-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven.checkstyle.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>${com-puppycrawl-tools.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <configuration>
                            <configLocation>checkstyle/checkstyle.xml</configLocation>
                            <suppressionsLocation>checkstyle/suppressions.xml</suppressionsLocation>
                            <encoding>UTF-8</encoding>
                            <consoleOutput>true</consoleOutput>
                            <failsOnError>true</failsOnError>
                            <includeResources>false</includeResources>
                            <includeTestResources>false</includeTestResources>
                            <sourceDirectories>
                                <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
                            </sourceDirectories>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Accomplish the need to add at the top of your source files a license to protect your work.
                 https://mycila.carbou.me/license-maven-plugin/ -->
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>4.1</version>
                <configuration>
                    <licenseSets>
                        <licenseSet>
                            <header>APACHE-2.txt</header>
                            <excludes>
                                <exclude>**/README</exclude>
                                <exclude>src/test/resources/**</exclude>
                                <exclude>src/main/resources/**</exclude>
                                <exclude>src/assembly/**</exclude>
                                <exclude>**/*.q</exclude>
                            </excludes>
                        </licenseSet>
                    </licenseSets>

                    <properties>
                        <owner>Andrea Lamparelli</owner>
                        <email>a.lamparelli95@gmail.com</email>
                        <year>2021</year>
                    </properties>
                </configuration>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Maven release plugin using git flow
                 https://github.com/aleksandr-m/gitflow-maven-plugin -->
            <plugin>
                <groupId>com.amashchenko.maven.plugin</groupId>
                <artifactId>gitflow-maven-plugin</artifactId>
                <version>1.16.0</version>
                <configuration>
<!--                    <mvnExecutable>path_to_maven_executable</mvnExecutable>-->
<!--                    <gitExecutable>path_to_git_executable</gitExecutable>-->

                    <installProject>false</installProject>
                    <verbose>false</verbose>

                    <gitFlowConfig>
                        <productionBranch>main</productionBranch>
                        <developmentBranch>develop</developmentBranch>
                        <featureBranchPrefix>feature/</featureBranchPrefix>
                        <releaseBranchPrefix>release/</releaseBranchPrefix>
                        <hotfixBranchPrefix>hotfix/</hotfixBranchPrefix>
                        <supportBranchPrefix>support/</supportBranchPrefix>
                        <versionTagPrefix>v</versionTagPrefix>
                        <origin>origin</origin>
                    </gitFlowConfig>

                    <commitMessages>
                        <featureStartMessage>Update versions for feature branch</featureStartMessage>
                        <featureFinishMessage>Update versions for development branch</featureFinishMessage>

                        <hotfixStartMessage>Update versions for hotfix</hotfixStartMessage>
                        <hotfixFinishMessage>Update for next development version</hotfixFinishMessage>

                        <hotfixVersionUpdateMessage>Update to hotfix version</hotfixVersionUpdateMessage>

                        <releaseStartMessage>Update versions for release</releaseStartMessage>
                        <releaseFinishMessage>Update for next development version</releaseFinishMessage>

                        <releaseVersionUpdateMessage>Update for next development version</releaseVersionUpdateMessage>

                        <!-- git merge messages -->
                        <!-- Default git merge commit message will be used if left empty or undefined. -->

                        <releaseFinishMergeMessage></releaseFinishMergeMessage>
                        <releaseFinishDevMergeMessage></releaseFinishDevMergeMessage>

                        <featureFinishDevMergeMessage></featureFinishDevMergeMessage>

                        <hotfixFinishMergeMessage></hotfixFinishMergeMessage>
                        <hotfixFinishDevMergeMessage></hotfixFinishDevMergeMessage>
                        <hotfixFinishReleaseMergeMessage></hotfixFinishReleaseMergeMessage>
                        <hotfixFinishSupportMergeMessage></hotfixFinishSupportMergeMessage>

                        <!-- / git merge messages -->

                        <tagHotfixMessage>Tag hotfix</tagHotfixMessage>
                        <tagReleaseMessage>Tag release</tagReleaseMessage>

                        <!-- Migration Note: This was called <updateDevToAvoidConflitsMessage> in version 1.11.0, but has been deprecated in favour of the correctly spelt one below. -->
                        <updateDevToAvoidConflictsMessage>Update develop to production version to avoid merge
                            conflicts
                        </updateDevToAvoidConflictsMessage>
                        <updateDevBackPreMergeStateMessage>Update develop version back to pre-merge state
                        </updateDevBackPreMergeStateMessage>

                        <updateReleaseToAvoidConflictsMessage>Update release to hotfix version to avoid merge
                            conflicts
                        </updateReleaseToAvoidConflictsMessage>
                        <updateReleaseBackPreMergeStateMessage>Update release version back to pre-merge state
                        </updateReleaseBackPreMergeStateMessage>
                    </commitMessages>
                </configuration>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
            <testResource>
                <directory>${project.basedir}/src/it/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
    </build>

    <repositories>
        <repository>
            <id>confluent</id>
            <url>http://packages.confluent.io/maven/</url>
        </repository>
    </repositories>
</project>